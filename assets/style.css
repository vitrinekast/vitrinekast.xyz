@charset "UTF-8";
/*!
Theme Name: ST
Theme URI: http://underscores.me/
Author: Underscores.me
Author URI: http://underscores.me/
Description: Description
Version: 4.0.45
Tested up to: 5.4
Requires PHP: 5.6
License: GNU General Public License v2 or later
License URI: LICENSE
Text Domain: ST
Tags: custom-background, custom-logo, custom-menu, featured-images, threaded-comments, translation-ready

This theme, like WordPress, is licensed under the GPL.
Use it to make something cool, have fun, and share what you've learned.

dimitri is based on Underscores https://underscores.me/, (C) 2012-2020 Automattic, Inc.
Underscores is distributed under the terms of the GNU GPL v2 or later.

Normalizing styles have been helped along thanks to the fine work of
Nicolas Gallagher and Jonathan Neal https://necolas.github.io/normalize.css/
*/
/* Text meant only for screen readers. */
.screen-reader-text {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
  word-wrap: normal !important;
}

.screen-reader-text:focus {
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  -webkit-clip-path: none;
          clip-path: none;
  color: #21759b;
  display: block;
  font-size: 0.875rem;
  font-weight: 700;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
}

/* Do not show the outline on the skip link target. */
#primary[tabindex="-1"]:focus {
  outline: 0;
}

.alignleft {
  /*rtl:ignore*/
  float: left;
  /*rtl:ignore*/
  margin-right: 1.5em;
  margin-bottom: 1.5em;
}

.alignright {
  /*rtl:ignore*/
  float: right;
  /*rtl:ignore*/
  margin-left: 1.5em;
  margin-bottom: 1.5em;
}

.aligncenter {
  clear: both;
  display: block;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 1.5em;
}

/* Inherit box-sizing to more easily change it's value on a component level.
@link http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
*,
*::before,
*::after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
}

.wp-block-pullquote {
  margin: 0 0;
  padding: 0 0;
}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
	 ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
}

/* Sections
	 ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
/* Grouping content
	 ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Text-level semantics
	 ========================================================================== */
/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
	 ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
	 ========================================================================== */
/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  overflow: visible;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *		`fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

/* Interactive
	 ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
	 ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

.p--abs-stretch {
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
}

.p--fixed-stretch {
  width: 100%;
  height: 100%;
  position: fixed;
  left: 0;
  top: 0;
}

.h--100 {
  height: 100%;
}

.d--inline {
  display: inline;
}

:root {
  --grid-gap: 32px;
}

@media only screen and (max-width: 992px) {
  :root {
    --grid-gap: 16px;
  }
}

.container {
  max-width: var(--wp--custom--spacing--wide-size);
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  display: grid;
  width: 100%;
  grid-template-columns: repeat(12, 1fr);
  grid-gap: var(--grid-gap);
  position: relative;
}

@media only screen and (max-width: var(--wp--custom--spacing--wide-size) 64px) {
  .container {
    margin-left: var(--grid-gap);
    margin-right: var(--grid-gap);
    max-width: calc(100% - var(--grid-gap) * 2);
  }
}

.container--static {
  max-width: var(--wp--custom--spacing--wide-size);
  margin-left: auto;
  margin-right: auto;
  width: 100%;
}

.container--full {
  margin-left: var(--grid-gap);
  margin-right: var(--grid-gap);
  max-width: calc(100% - var(--grid-gap) * 2);
}

.container--stretch {
  max-width: 100%;
  margin-left: 0;
  margin-right: 0;
}

.container--grey {
  background-color: #e6e6e6;
  padding: 4rem 0;
}

.col {
  grid-column-end: span 12;
  max-width: 100%;
}

.col--1 {
  grid-column-end: span 1;
}

.col--2 {
  grid-column-end: span 2;
}

.col--3 {
  grid-column-end: span 3;
}

.col--4 {
  grid-column-end: span 4;
}

.col--5 {
  grid-column-end: span 5;
}

.col--6 {
  grid-column-end: span 6;
}

.col--7 {
  grid-column-end: span 7;
}

.col--8 {
  grid-column-end: span 8;
}

.col--9 {
  grid-column-end: span 9;
}

.col--10 {
  grid-column-end: span 10;
}

.col--11 {
  grid-column-end: span 11;
}

.col--12 {
  grid-column-end: span 12;
}

@media only screen and (max-width: 767px) {
  .col--1 {
    grid-column-end: span 12;
  }
  .col--2 {
    grid-column-end: span 12;
  }
  .col--3 {
    grid-column-end: span 12;
  }
  .col--4 {
    grid-column-end: span 12;
  }
  .col--5 {
    grid-column-end: span 12;
  }
  .col--6 {
    grid-column-end: span 12;
  }
  .col--7 {
    grid-column-end: span 12;
  }
  .col--8 {
    grid-column-end: span 12;
  }
  .col--9 {
    grid-column-end: span 12;
  }
  .col--10 {
    grid-column-end: span 12;
  }
  .col--11 {
    grid-column-end: span 12;
  }
  .col--12 {
    grid-column-end: span 12;
  }
}

@media only screen and (max-width: 1900px) {
  .col--1--xl {
    grid-column-end: span 1;
  }
  .col--2--xl {
    grid-column-end: span 2;
  }
  .col--3--xl {
    grid-column-end: span 3;
  }
  .col--4--xl {
    grid-column-end: span 4;
  }
  .col--5--xl {
    grid-column-end: span 5;
  }
  .col--6--xl {
    grid-column-end: span 6;
  }
  .col--7--xl {
    grid-column-end: span 7;
  }
  .col--8--xl {
    grid-column-end: span 8;
  }
  .col--9--xl {
    grid-column-end: span 9;
  }
  .col--10--xl {
    grid-column-end: span 10;
  }
  .col--11--xl {
    grid-column-end: span 11;
  }
  .col--12--xl {
    grid-column-end: span 12;
  }
}

@media only screen and (max-width: 1400px) {
  .col--1--lg {
    grid-column-end: span 1;
  }
  .col--2--lg {
    grid-column-end: span 2;
  }
  .col--3--lg {
    grid-column-end: span 3;
  }
  .col--4--lg {
    grid-column-end: span 4;
  }
  .col--5--lg {
    grid-column-end: span 5;
  }
  .col--6--lg {
    grid-column-end: span 6;
  }
  .col--7--lg {
    grid-column-end: span 7;
  }
  .col--8--lg {
    grid-column-end: span 8;
  }
  .col--9--lg {
    grid-column-end: span 9;
  }
  .col--10--lg {
    grid-column-end: span 10;
  }
  .col--11--lg {
    grid-column-end: span 11;
  }
  .col--12--lg {
    grid-column-end: span 12;
  }
}

@media only screen and (max-width: 992px) {
  .col--1--md {
    grid-column-end: span 1;
  }
  .col--2--md {
    grid-column-end: span 2;
  }
  .col--3--md {
    grid-column-end: span 3;
  }
  .col--4--md {
    grid-column-end: span 4;
  }
  .col--5--md {
    grid-column-end: span 5;
  }
  .col--6--md {
    grid-column-end: span 6;
  }
  .col--7--md {
    grid-column-end: span 7;
  }
  .col--8--md {
    grid-column-end: span 8;
  }
  .col--9--md {
    grid-column-end: span 9;
  }
  .col--10--md {
    grid-column-end: span 10;
  }
  .col--11--md {
    grid-column-end: span 11;
  }
  .col--12--md {
    grid-column-end: span 12;
  }
}

@media only screen and (max-width: 767px) {
  .col--1--sm {
    grid-column-end: span 1;
  }
  .col--2--sm {
    grid-column-end: span 2;
  }
  .col--3--sm {
    grid-column-end: span 3;
  }
  .col--4--sm {
    grid-column-end: span 4;
  }
  .col--5--sm {
    grid-column-end: span 5;
  }
  .col--6--sm {
    grid-column-end: span 6;
  }
  .col--7--sm {
    grid-column-end: span 7;
  }
  .col--8--sm {
    grid-column-end: span 8;
  }
  .col--9--sm {
    grid-column-end: span 9;
  }
  .col--10--sm {
    grid-column-end: span 10;
  }
  .col--11--sm {
    grid-column-end: span 11;
  }
  .col--12--sm {
    grid-column-end: span 12;
  }
}

.col--sticky {
  position: sticky;
  top: 4rem;
  align-self: start;
}

.row {
  position: relative;
}

.row--1 {
  grid-row-end: span 1;
}

.row--2 {
  grid-row-end: span 2;
}

.row--3 {
  grid-row-end: span 3;
}

@media only screen and (max-width: 1900px) {
  .row--1--xl {
    grid-row-end: span 1;
  }
  .row--2--xl {
    grid-row-end: span 2;
  }
  .row--3--xl {
    grid-row-end: span 3;
  }
}

@media only screen and (max-width: 1400px) {
  .row--1--lg {
    grid-row-end: span 1;
  }
  .row--2--lg {
    grid-row-end: span 2;
  }
  .row--3--lg {
    grid-row-end: span 3;
  }
}

@media only screen and (max-width: 992px) {
  .row--1--md {
    grid-row-end: span 1;
  }
  .row--2--md {
    grid-row-end: span 2;
  }
  .row--3--md {
    grid-row-end: span 3;
  }
}

@media only screen and (max-width: 767px) {
  .row--1--sm {
    grid-row-end: span 1;
  }
  .row--2--sm {
    grid-row-end: span 2;
  }
  .row--3--sm {
    grid-row-end: span 3;
  }
}

.row--end {
  align-self: end;
}

.row--start {
  align-self: start;
}

html {
  -webkit-font-smoothing: antialiased;
  font-smooth: always;
  moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  -moz-font-feature-settings: “liga” on;
}

:root {
  --font-size--base: 1.25rem;
  --font-size--heading-mult: 1.5;
  --font-size--margin: 2rem;
}

@media only screen and (min-width: 1400px) {
  :root {
    --font-size--base: 1.5rem;
    --font-size--heading-mult: 1.5;
  }
}

@media only screen and (max-width: 992px) {
  :root {
    --font-size--base: 1rem;
    --font-size--heading-mult: 1.25;
    --font-size--margin: 1rem;
  }
}

@media only screen and (max-width: 992px) {
  :root {
    --font-size--base: 1rem;
    --font-size--heading-mult: 1;
  }
}

body {
  font-family: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  color: white;
  line-height: 1.5;
  font-size: var(--font-size--base);
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  line-height: 1.25;
  font-weight: 600;
  margin: 0 0;
  color: inherit;
  letter-spacing: -0.051rem;
}

h1,
h2 {
  text-transform: none;
}

button,
input,
select,
optgroup,
textarea {
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

h1 {
  font-size: calc( var(--font-size--base) * 1.5 * var(--font-size--heading-mult));
}

h2 {
  font-size: calc(var(--font-size--base) * 2 * var(--font-size--heading-mult));
}

h3 {
  font-size: calc( var(--font-size--base) * 1.5 * var(--font-size--heading-mult));
}

h4 {
  font-size: calc( var(--font-size--base) * 1.25 * var(--font-size--heading-mult));
}

h5,
h6 {
  font-size: calc( var(--font-size--base) * 1.1 * var(--font-size--heading-mult));
}

small {
  font-size: calc(var(--font-size--base) * 0.7);
}

b,
strong {
  font-weight: 700;
}

dfn,
cite,
em,
i {
  font-style: italic;
}

code,
pre,
kbd,
tt,
var {
  font-family: monaco, consolas, "Andale Mono", "DejaVu Sans Mono", monospace;
}

ul {
  list-style: none;
  padding: 0 0;
  margin: 0 0;
}

li {
  font-size: inherit;
}

article p {
  max-width: 40em;
}

article h1, article h2, article h3, article h4, article h5, article h6 {
  margin-top: 2rem;
}

article p {
  margin-top: 2rem;
}

article a {
  position: relative;
  color: inherit;
  transition: color 0.5s cubic-bezier(0.2, 0, 0, 1) 0s;
  z-index: 0;
  text-decoration: none;
  will-change: color;
  margin-right: 2px;
  display: inline-block;
}

article a:before {
  content: "";
  position: absolute;
  width: calc(100% + 2px);
  height: 100%;
  transform: scale3d(1, 0.1, 1);
  transform-origin: bottom;
  left: -1px;
  bottom: 0;
  background-color: white;
  transition: transform 0.5s cubic-bezier(0.2, 0, 0, 1) 0s;
  z-index: -1;
  will-change: transform;
}

article a:hover, article a.active {
  color: #151515;
}

article a:hover:before, article a.active:before {
  transform: scale3d(1, 1, 1);
}

html,
body {
  height: 100%;
}

body {
  padding-top: var(--grid-gap);
  padding-bottom: var(--grid-gap);
  background-color: #151515;
}

body:not(.js-loaded) * {
  transition: none;
}

.button {
  font-family: inherit;
  font-size: 1.25rem;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: 0.5rem;
  cursor: pointer;
  transition: all 0.5s cubic-bezier(0.2, 0, 0, 1) 0s;
  font-weight: 600;
  border: none;
  position: relative;
  text-decoration: none;
  color: white;
  font-size: calc(var(--font-size--base) * 1);
}

.button:hover {
  color: gray;
}

.button__label {
  font-size: inherit;
  color: inherit;
  background: inherit;
  padding: 0 0;
  border-radius: none;
  text-align: inherit;
}

.button .icon {
  transition: all 0.5s cubic-bezier(0.2, 0, 0, 1) 0s;
  transform: translate3d(0, 0, 0);
  margin-left: 1rem;
}

.button--light {
  background-color: white;
  color: #151515;
}

.button--light .button__icon {
  background-color: #151515;
}

.button--light:hover {
  background-color: gray;
}

.button--icon {
  padding: 0.5rem;
}

.button--icon[active] .button__icon {
  animation: rotating 2s linear infinite;
}

.button--link {
  opacity: 0.5;
  transition: 0.2s ease-in;
  cursor: pointer;
}

.button--link:hover, .button--link[active] {
  opacity: 1;
  color: #ff00bf;
}

@keyframes rotating {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}

.icon {
  width: 1.5rem;
  height: 1.5rem;
  display: inline-block;
}

.icon--light {
  background-color: white;
}

.icon--dark {
  background-color: #151515;
}

.icon--link {
  -webkit-mask-image: url(assets/icons/icon--link.svg);
          mask-image: url(assets/icons/icon--link.svg);
}

.icon--arrow {
  -webkit-mask-image: url(assets/icons/icon--arrow.svg);
          mask-image: url(assets/icons/icon--arrow.svg);
}

.icon--close {
  -webkit-mask-image: url(assets/icons/icon--close.svg);
          mask-image: url(assets/icons/icon--close.svg);
}

.icon--arrow-back {
  -webkit-mask-image: url(assets/icons/icon--arrow-back.svg);
          mask-image: url(assets/icons/icon--arrow-back.svg);
}

.icon--expand {
  -webkit-mask-image: url(assets/icons/icon--expand.svg);
          mask-image: url(assets/icons/icon--expand.svg);
}

.icon--svg {
  background-color: transparent;
}

.icon--svg svg {
  fill: currentColor;
  width: 100%;
}

.header--fixed {
  position: fixed;
  top: var(--grid-gap);
  right: var(--grid-gap);
  z-index: 2;
  height: calc( var(--font-size--base) * 1.5 * var(--font-size--heading-mult) * 1.25);
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.footer {
  position: fixed;
  bottom: 0.5rem;
  left: 0.5rem;
  width: calc(100% - 1rem);
  transform: translate3d(0, 200%, 0);
  transition: all 0.5s cubic-bezier(0.2, 0, 0, 1) 0s;
}

.footer__button {
  width: 100%;
  height: 100%;
  text-decoration: none;
  font-family: monospace;
  -webkit-text-decoration: uppercase;
          text-decoration: uppercase;
  justify-content: space-between;
}

body[footer-visible="true"] .footer {
  transform: translate3d(0, 0%, 0);
}

.videoplayer {
  overflow: hidden;
  position: relative;
  background: transparent linear-gradient(to bottom, #85908c 0%, #323431 100%) repeat scroll 0 0;
  background-size: cover;
  width: 100%;
  max-width: 70vw;
  max-height: 70vh;
  position: relative;
}

.videoplayer:before {
  display: block;
  content: "";
  width: 100%;
  padding-top: 75%;
}

.videoplayer > * {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
}

.videoplayer__wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  background: black;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@media only screen and (max-width: 992px) {
  .videoplayer__wrapper {
    align-items: flex-end;
    padding: 2rem;
    justify-content: flex-end;
  }
}

.videoplayer__video video {
  display: none;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  -o-object-position: center center;
     object-position: center center;
  animation: 3000ms linear 700ms normal forwards infinite paused on;
}

.videoplayer__video video[active="true"] {
  display: block;
  animation-play-state: running;
}

.videoplayer__overlay, .videoplayer__canvas {
  z-index: 2;
}

.videoplayer.on {
  animation: 300ms cubic-bezier(0.23, 1, 0.32, 1) 0ms normal forwards 1 paused onBlink;
  animation-play-state: running;
}

.videoplayer.off {
  animation: 750ms cubic-bezier(0.23, 1, 0.32, 1) 0ms reverse forwards 1 paused offBlink;
  animation-play-state: running;
  animation-direction: normal;
}

.videoeffect, .videoeffect--snow {
  visibility: visible;
}

.videoeffect--scanlines {
  z-index: 9999;
  background: linear-gradient(rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.25) 50%), linear-gradient(90deg, rgba(255, 0, 0, 0.06), rgba(0, 255, 0, 0.02), rgba(0, 0, 255, 0.06));
  background-size: 100% 2px, 8px 100%;
  pointer-events: none;
}

.videoeffect--snow {
  opacity: 0.2;
}

.videoeffect--vignette {
  background-image: url(/assets/assets/images/border.png);
  background-repeat: no-repeat;
  background-size: 100% 100%;
  z-index: 2;
  border: 10px solid black;
  transform: scale(1.01);
}

.videoeffect--vcr {
  opacity: 0.2;
}

.glitch {
  animation: 5s ease 2000ms normal none infinite running glitch;
}

@keyframes glitch {
  30% {
  }
  40% {
    opacity: 1;
    transform: scale(1, 1);
    filter: brightness(1);
  }
  41% {
    filter: brightness(4);
  }
  42% {
    opacity: 0.8;
    transform: scale(1, 1.2);
    filter: brightness(1);
  }
  42% {
    opacity: 0.8;
    transform: scale(1, 1.2);
    transform: skew(-5deg, 0);
  }
  43% {
    opacity: 1;
    transform: scale(1, 1);
    transform: skew(0, 0);
  }
  65% {
  }
}

@keyframes on {
  0% {
    transform: scale(1, 0.3) translate3d(0, 0, 0);
    filter: brightness(4) blur(15px);
  }
  5% {
    transform: scale(1, 0.8) translate3d(0, 100%, 0);
  }
  6% {
    transform: scale(1, 0.1) translate3d(0, -100%, 0);
  }
  9% {
    transform: scale(1.3, 0.6) translate3d(0, 100%, 0);
    filter: brightness(40);
  }
  11% {
    transform: scale(1, 1) translate3d(0, 0, 0);
    filter: brightness(1);
  }
  100% {
    transform: scale(1, 1) translate3d(0, 0, 0);
    filter: brightness(1);
  }
}

@keyframes onBlink {
  0% {
    transform: scale(0, 0);
  }
  40% {
    transform: scale(0.2, 0.005);
  }
  60% {
    transform: scale(1, 0.005);
  }
  70% {
    transform: scale(1, 0.005);
  }
  100% {
    transform: scale(1, 1);
  }
}

@keyframes offBlink {
  0% {
    transform: scale(1, 1);
  }
  40% {
    transform: scale(1, 0.005);
  }
  60% {
    transform: scale(1, 0.005);
  }
  70% {
    transform: scale(0.2, 0.005);
  }
  100% {
    transform: scale(0, 0);
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
